前情回顾

1. 什么是文件
   分类 ： 文本   二进制文件

   字节串（bytes）： 一段数据的二进制内容

      bytes.decode()  转换为字符串
      str.encode()  转换为字节串

2. 文件读写操作

   open() --> read()/write() --> close()

   * r   w   a  +  b

3. 文件读写细节

   * 缓冲区 ： 减少和硬盘的交互次数，提高读写效率

     系统  行缓冲  指定缓冲大小
     flush()

   * 文件偏移量 ： 表达文件当前的读写位置

     tell()   seek(num,0)

练习2：
通过input输入一个目录（目录中有很多文件可能有文件夹），
删除这个目录中所有大小小于10字节的普通文件


正则训练：

1.在一个字符串文本中筛选数所有的整数
re.findall('[1-9][0-9]*',"小明身高 177cm,体重48kg")

2. 匹配大写字母开头的单词
In [43]: re.findall('[A-Z][A-Za-z]*',"Jame,I am")
    ...:
Out[43]: ['Jame', 'I']

3. 匹配大写字母开头英文单词  iPython
In [85]: re.findall(r'\b[A-Z][A-Za-z]*',"Jame,I a
    ...: m iPython")
Out[85]: ['Jame', 'I']

4. 匹配数字  整数 负数  整数  小数  1.5  -3.6

In [85]: re.findall(r'\b[A-Z][A-Za-z]*',"Jame,I a
    ...: m iPython")
Out[85]: ['Jame', 'I']

5. 匹配日薪
In [94]: re.findall(r'\$\d+',"日薪:$100")
Out[94]: ['$100']

6. 匹配书名 连同书名号
《爱你不是两三天》 《别走-2008》 《走吧-2020》
《今天，你吃了吗？》

In [112]: re.findall(r'《.+?》',"《爱你不是两三天
     ...: 》 《别走-2008》 《走吧-2020》《今天，
     ...: 你吃了吗？》")
Out[112]: ['《爱你不是两三天》', '《别走-2008》', '《走吧-2020》', '《今天，你吃了吗？》']


7. 匹配身份证号

In [135]: re.search(r"\d{17}(\d|x)","110010199901
     ...: 02106x").group()

Out[135]: '11001019990102106x'


作业 : 1. 熟悉正则元字符
      2. 编写一个函数，参数传入一个设备端口名称
         返回值是这个端口描述中所对应的 address
         信息

         思路： 根据端口名确定段落
               再从段落中匹配目标

         提示： 段与段之间有空行
               每段第一个单词是端口名称
               端口名称可能很复杂





